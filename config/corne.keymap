/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define BASE 0
#define RAISE 1
#define LOWER 2
#define NUM 3
#define NAV 4

/ {
        behaviors {
            hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <200>;
                quick-tap-ms = <100>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |      |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |      |
// |      |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  '  |      |
// |      |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  -  |      |
//                    | ESC | BKSP| TAB |   | ENT | SPC  | DEL |
                        bindings = <
   &none &kp Q      &kp W      &kp E        &kp R          &kp T    &kp Y       &kp U           &kp I        &kp O        &kp P               &none
   &none &hm LGUI A &hm LALT S &hm LSHIFT D &hm LCTRL F    &kp G    &kp H       &hm RCTRL J     &hm RSHIFT K &hm RALT L   &lt NAV NON_US_HASH &none
   &none &kp Z      &kp X      &kp C        &kp V          &kp B    &kp N       &kp M           &kp COMMA    &kp DOT      &kp FSLH            &none
                                   &kp ESC      &lt LOWER BSPC &kp TAB  &lt NUM RET &lt RAISE SPACE &kp DEL
                        >;
                };
                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |BTCLR|     |     |POWER|SLEEP|   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5             &kp N6      &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4       &kp LEFT    &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LSHFT  &bt BT_CLR   &trans       &trans       &trans       &ext_power EP_TOG  &kp K_SLEEP &trans   &trans &trans    &trans &trans
                          	        &kp LGUI     &trans       &kp SPACE          &kp RET     &trans   &kp RALT
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// |      |  §  |  !  |  "  |  #  |  $  |   |  /  |  +  |  =  |  ?  |  Å  |      |
// |      |  |  |  %  |  &  |  *  |  \  |   |  {  |  (  |  )  |  }  |  Ø  |      |
// |      |  ^  |  ¨  |  ´  |  ~  |  `  |   |  <  |  [  |  ]  |  >  |  Æ  |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &trans &kp LS(GRAVE) &kp LS(N1) &kp LS(N2) &kp LS(N3)          &kp RA(N4)           &kp LS(N7)      &kp MINUS  &kp LS(N0) &kp LS(MINUS)      &kp LBKT &trans
   &trans &kp RA(EQUAL) &kp LS(N5) &kp LS(N6) &kp LS(NON_US_HASH) &kp RA(NON_US_BSLH)  &kp RA(N7)      &kp LS(N8) &kp LS(N9) &kp RA(N0)         &kp SQT  &trans
   &trans &kp LS(RBKT)  &kp RBKT   &kp EQUAL  &kp RA(RBKT)        &kp LS(EQUAL)        &kp NON_US_BSLH &kp RA(N8) &kp RA(N9) &kp LS(NON_US_BSLH &kp SEMI &trans
                    	           &trans    &trans               &trans               &trans          &trans     &trans
                        >;
                };
                num_layer {
// -----------------------------------------------------------------------------------------
// |      |     |  7  |  8  |  9  |     |   |     |  7  |  8  |  9  |     |      |
// |      |     |  4  |  5  |  6  |     |   |     |  4  |  5  |  6  |     |      |
// |      |     |  1  |  2  |  3  |     |   |     |  1  |  2  |  3  |     |      |
//                    |  0  |     |     |   |     |     |  0  |
                        bindings = <
   &trans &trans &kp KP_N7 &kp KP_N8 &kp KP_N9 &trans   &trans &kp KP_N7 &kp KP_N8 &kp KP_N9 &trans &trans
   &trans &trans &kp KP_N4 &kp KP_N5 &kp KP_N6 &trans   &trans &kp KP_N4 &kp KP_N5 &kp KP_N6 &trans &trans
   &trans &trans &kp KP_N1 &kp KP_N2 &kp KP_N3 &trans   &trans &kp KP_N1 &kp KP_N2 &kp KP_N3 &trans &trans
                           &kp KP_N0 &trans    &trans   &trans &trans    &kp KP_N0
                        >;
                };
                nav_layer {
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   | LFT | DWN |  UP | RGT |     |      |
// |      |     |     |     |     |     |   | HOM | PDN | PUP | END |     |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &trans &trans &trans &trans &trans &trans   &trans   &trans    &trans    &trans    &trans &trans
   &trans &trans &trans &trans &trans &trans   &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &trans &trans
   &trans &trans &trans &trans &trans &trans   &kp HOME &kp PG_DN &kp PG_UP &kp END   &trans &trans
                        &trans &trans &trans   &trans   &trans    &trans
                        >;
                };
        };
};
